<!doctype html>
<html lang="es">

<!-- Mirrored from ead.murciaeduca.es/pluginfile.php/1431908/mod_resource/content/3/AD06_contenidos_Web/361_introduccin.html by HTTrack Website Copier/3.x [XR&CO'2014], Thu, 18 Jan 2024 16:06:26 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<link rel="stylesheet" type="text/css" href="../CSS/BASE.CSS" />
<link rel="stylesheet" type="text/css" href="../CSS/EXE_HIGH.CSS" />
<link rel="stylesheet" type="text/css" href="../CSS/CONTENT.CSS" />
<link rel="stylesheet" type="text/css" href="../CSS/NAV.CSS" />
<meta http-equiv="content-type" content="text/html;  charset=utf-8" />
<title>3.6.1.- Introducción. </title>
<link rel="shortcut icon" href="../ICO/FAVICON.ICO" type="image/x-icon" />
<meta name="generator" content="eXeLearning 2.5 - exelearning.net" />
<!--[if lt IE 9]><script type="text/javascript" src="exe_html5.js"></script><![endif]-->
<script type="text/javascript" src="../JS/EXE_JQUE.JS"></script>
<script type="text/javascript" src="../JS/EXE_HIGH.JS"></script>
<script type="text/javascript" src="../JS/COMMON_I.JS"></script>
<script type="text/javascript" src="../JS/COMMON.JS"></script>
<meta name="viewport" content="width=device-width, initial-scale=1" /></head>
<body class="exe-web-site" id="exe-node-38"><script type="text/javascript">document.body.className+=" js"</script>
<div id="content">
<p id="skipNav"><a href="#main" class="sr-av">Saltar la navegación</a></p>
<section id="emptyHeader"></section>
<nav id="siteNav">
<ul>
   <li><a href="INDEX.HTM" class="daddy main-node">Bases de datos xml.</a></li>
   <li><a href="1_INTROD.HTM" class="daddy">1.- Introduccion.</a>
   <ul class="other-section">
      <li><a href="11_DOCUM.HTM" class="no-ch">1.1.- Documentos XML centrados en datos y en texto.</a></li>
      <li><a href="12OPCION.HTM" class="no-ch">1.2.-	Opciones de almacenamiento.</a></li>
   </ul>
   </li>
   <li><a href="2BASES_D.HTM" class="daddy">2.-	Bases de Datos Nativas XML.</a>
   <ul class="other-section">
      <li><a href="21ESTRAT.HTM" class="no-ch">2.1.-	Estrategias de almacenamiento.</a></li>
      <li><a href="22COLECC.HTM" class="no-ch">2.2.-	Colecciones y documentos.</a></li>
      <li><a href="23GESTOR.HTM" class="no-ch">2.3.-	Gestores nativos XML comerciales y libres</a></li>
   </ul>
   </li>
   <li class="current-page-parent"><a href="3_BASE_D.HTM" class="current-page-parent daddy">3.- Base de datos eXist.</a>
   <ul>
      <li><a href="31_INSTA.HTM" class="no-ch">3.1.- Instalación eXist.</a></li>
      <li><a href="32_PRIME.HTM" class="no-ch">3.2.- Primeros pasos.</a></li>
      <li><a href="33_JAVA_.HTM" class="no-ch">3.3.- Java Admin Client de eXist.</a></li>
      <li><a href="34_LENGU.HTM" class="no-ch">3.4.- Lenguaje de consulta XPath.</a></li>
      <li><a href="35_EL_LE.HTM" class="daddy">3.5.- El lenguaje de consultas XQuery.</a>
      <ul class="other-section">
         <li><a href="351_MODE.HTM" class="no-ch">3.5.1.- Modelo de datos.</a></li>
         <li><a href="352_CAMI.HTM" class="no-ch">3.5.2.- Caminos de localización.</a></li>
         <li><a href="353_PRIM.HTM" class="no-ch">3.5.3.- Primeras consultas XQuery.</a></li>
         <li><a href="354_EXPR.HTM" class="no-ch">3.5.4.- Expresiones FLWOR.</a></li>
         <li><a href="355_XQUE.HTM" class="no-ch">3.5.5.- XQuery Update Facility.</a></li>
      </ul>
      </li>
      <li class="current-page-parent"><a href="36_CONEX.HTM" class="current-page-parent daddy">3.6.- Conexión a base de datos XML. API XML:DB.</a>
      <ul>
         <li id="active"><a href="361_INTR.HTM" class="active no-ch">3.6.1.- Introducción.</a></li>
         <li><a href="362_CONS.HTM" class="no-ch">3.6.2.- Consultas sobre colecciones y documentos.</a></li>
         <li><a href="363_CREA.HTM" class="no-ch">3.6.3.- Crear y borrar colecciones.</a></li>
      </ul>
      </li>
      <li><a href="37_CONEX.HTM" class="daddy">3.7.- Conexión a base de datos XML. API XJQ.</a>
      <ul class="other-section">
         <li><a href="371_INTR.HTM" class="no-ch">3.7.1.- Introducción</a></li>
         <li><a href="372_CONE.HTM" class="no-ch">3.7.2.- Conexión a la BD.</a></li>
         <li><a href="373_EJEC.HTM" class="no-ch">3.7.3.- Ejecución de consultas XQuery</a></li>
      </ul>
      </li>
   </ul>
   </li>
   <li><a href="4_BASES_.HTM" class="daddy">4.- Bases de Datos MongoDB</a>
   <ul class="other-section">
      <li><a href="41_INSTA.HTM" class="no-ch">4.1.- Instalación, configuración y manejo de una base de datos Mongo.</a></li>
      <li><a href="42_CONEX.HTM" class="no-ch">4.2.- Conexión desde JAVA a MongoDB</a></li>
   </ul>
   </li>
   <li><a href="ANEXO_LI.HTM" class="no-ch">Anexo.- Licencias de recursos.</a></li>
</ul>
</nav>
<div id='topPagination'>
<nav class="pagination noprt">
<a href="36_CONEX.HTM" class="prev"><span><span>&laquo; </span>Anterior</span></a> <span class="sep">| </span><a href="362_CONS.HTM" class="next"><span>Siguiente<span> &raquo;</span></span></a>
</nav>
</div>
<div id="main-wrapper">
<section id="main">
<header id="nodeDecoration"><h1 id="nodeTitle">3.6.1.- Introducción.</h1></header>
<article class="iDevice_wrapper textIdevice" id="id110">
<div class="iDevice emphasis0" >
<div id="ta110_110_2" class="block iDevice_content">
<div class="exe-text"><p style="text-align: justify;"><span>Esta API proporciona una interfaz común para bases de datos nativas o habilitadas para XML y admite el desarrollo de aplicaciones portátiles y reutilizables.</span></p>
<p style="text-align: justify;">Los componentes básicos empleados por XML: DB API son controladores , colecciones , recursos y servicios .</p>
<ul id="yui_3_17_2_1_1596364357775_136" style="text-align: justify;">
<li><span>Los <b>controladores </b>son implementaciones de la interfaz de la base de datos que encapsulan la lógica de acceso a la base de datos para productos de bases de datos XML específicos. Son proporcionados por el proveedor del producto y deben registrarse con el gestor de la base de datos.</span></li>
<li><span>Una <b>colección </b>es un contenedor jerárquico de recursos y otras subcolecciones. Actualmente, la API define dos recursos diferentes: XMLResource y BinaryResource. An XMLResource representa un documento XML o un fragmento de documento, seleccionado por una consulta XPath ejecutada previamente.</span></li>
<li id="yui_3_17_2_1_1596364357775_135">Finalmente, se solicitan<span> </span><b>servicios<span> </span></b>para tareas especiales, como consultar una colección con XPath o administrar una colección.</li>
</ul>
<p style="text-align: justify;">La API XML:DB principalmente se basa en tres paquetes:</p>
<ul style="text-align: justify;">
<li><span><code>org.xmldb.api</code>: Interfaces, <code>DatabaseManager</code></span></li>
<li><code>org.xmldb.api.base</code>: Interfaces, <code>Collection</code>, <code>Configurable</code>, <code>Database</code>, <code>Resource</code>, <code>ResourceIterator</code>, <code>ResourceSet</code>, <code>Service</code> , <code>Classes</code>, <code>ErrorCodes</code> , <code>Exceptions</code>, <code>XMLDBException</code>.</li>
<li><code>org.xmldb.api.modules</code>: Interfaces, <code>BinaryResource</code>, <code>CollectionManagementService</code>, <code>TransactionService</code>, <code>XMLResource</code>, <code>XPathQueryService</code>, <code>XUpdateQueryService</code>.</li>
</ul>
<p style="text-align: justify;">Hay varios ejemplos de XML: DB proporcionados en la pagina de  eXist . </p>
<p id="yui_3_17_2_1_1596364357775_137" style="text-align: justify;">En el siguiente ejemplo sencillo , se recupera un documento  del servidor eXist y se imprime en la salida estándar. El programa recibe dos argumentos <code>arg[0]</code> y <code>arg[1]</code>, nombre de la colección y nombre del fichero xml,  respectivamente.</p>
<div class="highlighted-code language-java" style="text-align: justify;">
<div>
<pre><code>import org.xmldb.api.base.*;
import org.xmldb.api.modules.*;
import org.xmldb.api.*;
import javax.xml.transform.OutputKeys;
import org.exist.xmldb.EXistResource;
public class RetrieveExample {
    
    private static String URI = "xmldb:exist://localhost:8080/exist/xmlrpc";
    /**
     * args[0] Should be the name of the collection to access
     * args[1] Should be the name of the resource to read from the collection
     */
    public static void main(String args[]) throws Exception {
        
        final String driver = "org.exist.xmldb.DatabaseImpl";
        
        // initialize database driver
        Class cl = Class.forName(driver);
        Database database = (Database) cl.newInstance();
        database.setProperty("create-database", "true");
        DatabaseManager.registerDatabase(database);
        
        Collection col = null;
        XMLResource res = null;
        try {    
            // get the collection
            col = DatabaseManager.getCollection(URI + args[0]);
            col.setProperty(OutputKeys.INDENT, "no");
            res = (XMLResource)col.getResource(args[1]);
            
            if(res == null) {
                System.out.println("document not found!");
            } else {
                System.out.println(res.getContent());
            }
        } finally {
            //dont forget to clean up!
            
            if(res != null) {
                try { ((EXistResource)res).freeResources(); } catch(XMLDBException xe) {xe.printStackTrace();}
            }
            
            if(col != null) {
                try { col.close(); } catch(XMLDBException xe) 
                                           {xe.printStackTrace();}
            }
        }
    }
}</code></pre>
</div>
</div>
<div style="text-align: justify;"><code></code><span>En este ejemplo se registra el driver para eXist.</span></div>
<div style="text-align: justify;">
<div class="highlighted-code language-java">
<div>
<pre><code>// initialize database driver
Class cl = Class.forName("org.exist.xmldb.DatabaseImpl");
Database database = (Database) cl.newInstance();
database.setProperty("create-database", "true");
DatabaseManager.registerDatabase(database);</code></pre>
</div>
</div>
A continuación se obtiene el objeto colección ( <code>Collection</code> ) del gestor de la base de datos:</div>
<div style="text-align: justify;">
<div class="highlighted-code language-markup">
<div>
<pre><code>col&amp;nbsp;=&amp;nbsp;DatabaseManager.getCollection(URI&amp;nbsp;+&amp;nbsp;args[0]);</code></pre>
</div>
</div>
</div>
<p style="text-align: justify;"><span>Una vez utilizado el recurso se debe cerrar:</span></p>
<div class="highlighted-code language-markup" style="text-align: justify;">
<div>
<pre><code>col.close()</code></pre>
</div>
</div>
<p style="text-align: justify;"><span>El método <code>getCollection()</code> espera  una URI con el formato siguiente:</span></p>
<div class="highlighted-code language-java" style="text-align: justify;">
<div>
<pre><code>xmldb:[DATABASE-ID]://[HOST-ADDRESS]/db/collection</code></pre>
</div>
</div>
<p style="text-align: justify;">Debido a que se puede registrar más de un controlador de base de datos , se requiere la primera parte del URI (<code>xmldb:exist</code>) para determinar qué clase de controlador se debe usar.  El objeto de <span><code>DatabaseManager</code> </span>utiliza la identificación de la base de datos para seleccionar el controlador correcto de su lista de controladores disponibles.</p>
<p style="text-align: justify;">La parte final del URI identifica la ruta a la colección y, opcionalmente, la dirección de host del servidor de base de datos en la red. Internamente, eXist usa dos implementaciones de controladores diferentes: la primera habla con un motor de base de datos remoto que usa llamadas XML-RPC, la segunda tiene acceso directo a una instancia local de eXist-db.<span> </span></p>
<p style="text-align: justify;">La colección raíz siempre se identifica con / db.</p>
<p style="text-align: justify;">Por ejemplo:</p>
<div class="editor-indent" style="text-align: justify;">
<div class="editor-indent">
<div class="highlighted-code language-java">
<div>
<pre><code>xmldb:exist://localhost:8080/exist/xmlrpc/db/shakespeare/plays</code></pre>
</div>
</div>
</div>
</div>
<p style="text-align: justify;">Si omitimos la dirección  de host  el driver XML:DB  tratará de conectarse a una instancia local de la base de datos. Por ejemplo:</p>
<div class="highlighted-code language-java" style="text-align: justify;">
<div>
<pre><code>xmldb:exist:///db/shakespeare/plays</code></pre>
</div>
</div>
<p style="text-align: justify;">En este caso, debemos decirle al driver que creea una instancia a la base de datos si no hay ninguna creada. Esto se hace poniendo la propiedad   <code>create-database</code> de la clase <code>Database</code> a <code>true. </code><span> Para mas informacion del uso embebido de eXist-db consulta  </span><a href="https://exist-db.org/exist/apps/doc/deployment">deployment guide</a><span>.</span><span></span></p>
<p style="text-align: justify;">El metodo <code>setProperty</code> se utiliza para establecer parámetros específicos de la base de datos.</p>
<p style="text-align: justify;">La llamada <code>col.getResource() </code> recupera el documento, que se devuelve como un archivo <code>XMLResource</code>. Todos los recursos tienen un método <code>getContent()</code>, que devuelve el contenido del recurso, dependiendo de su tipo. En este caso recuperamos el contenido como tipo <code>String</code>.</p></div>
</div>
</div>
</article>
</section>
</div>
<div id='bottomPagination'>
<nav class="pagination noprt">
<a href="36_CONEX.HTM" class="prev"><span><span>&laquo; </span>Anterior</span></a> <span class="sep">| </span><a href="362_CONS.HTM" class="next"><span>Siguiente<span> &raquo;</span></span></a>
</nav>
</div>
</div>
<script type="text/javascript" src="../JS/_FPD_JS.JS"></script></body>
<!-- Mirrored from ead.murciaeduca.es/pluginfile.php/1431908/mod_resource/content/3/AD06_contenidos_Web/361_introduccin.html by HTTrack Website Copier/3.x [XR&CO'2014], Thu, 18 Jan 2024 16:06:26 GMT -->
</html>