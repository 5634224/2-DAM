<!doctype html>
<html lang="es">

<!-- Mirrored from ead.murciaeduca.es/pluginfile.php/1432838/mod_resource/content/7/PSP05_Contenidos_web/PSP05_Contenidos_Web/52_implementar_comunicaciones_simultneas.html by HTTrack Website Copier/3.x [XR&CO'2014], Tue, 26 Dec 2023 17:10:42 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<link rel="stylesheet" type="text/css" href="../CSS/BASE.CSS" />
<link rel="stylesheet" type="text/css" href="../CSS/CONTENT.CSS" />
<link rel="stylesheet" type="text/css" href="../CSS/NAV.CSS" />
<meta http-equiv="content-type" content="text/html;  charset=utf-8" />
<title>5.2.- Implementar comunicaciones simultáneas. | DAM_PSP_05 </title>
<link rel="shortcut icon" href="../ICO/FAVICON.ICO" type="image/x-icon" />
<meta name="author" content="MEFP 2020" />
<meta name="generator" content="eXeLearning 2.5 - exelearning.net" />
<!--[if lt IE 9]><script type="text/javascript" src="exe_html5.js"></script><![endif]-->
<script type="text/javascript" src="../JS/EXE_JQUE.JS"></script>
<script type="text/javascript" src="../JS/COMMON_I.JS"></script>
<script type="text/javascript" src="../JS/COMMON.JS"></script>
<meta name="viewport" content="width=device-width, initial-scale=1" /></head>
<body class="exe-web-site" id="exe-node-24"><script type="text/javascript">document.body.className+=" js"</script>
<div id="content">
<p id="skipNav"><a href="#main" class="sr-av">Saltar la navegación</a></p>
<header id="header" ><div id="headerContent">DAM_PSP_05</div></header>
<nav id="siteNav">
<ul>
   <li><a href="INDEX.HTM" class="daddy main-node">Generación de servicios en red.</a></li>
   <li><a href="1_INTROD.HTM" class="no-ch">1.- Introducción.</a></li>
   <li><a href="2_PROTOC.HTM" class="daddy">2.- Protocolos de comunicaciones del nivel de aplicación.</a>
   <ul class="other-section">
      <li><a href="21_COMUN.HTM" class="no-ch">2.1.- Comunicación entre aplicaciones.</a></li>
      <li><a href="22_CONEX.HTM" class="no-ch">2.2.- Conexión, transmisión y desconexión.</a></li>
      <li><a href="23_DNS_Y.HTM" class="no-ch">2.3.- DNS y resolución de nombres.</a></li>
      <li><a href="24_EL_PR.HTM" class="no-ch">2.4.- El protocolo FTP.</a></li>
      <li><a href="25_LOS_P.HTM" class="no-ch">2.5.- Los protocolos SMTP y POP3.</a></li>
      <li><a href="26_EL_PR.HTM" class="no-ch">2.6.- El protocolo HTTP.</a></li>
   </ul>
   </li>
   <li><a href="3_BIBLIO.HTM" class="daddy">3.- Bibliotecas de clases y componentes Java.</a>
   <ul class="other-section">
      <li><a href="31_OBJET.HTM" class="no-ch">3.1.- Objetos predefinidos.</a></li>
      <li><a href="32_MTODO.HTM" class="no-ch">3.2.- Métodos y ejemplos de uso de InetAddress.</a></li>
      <li><a href="33_PROGR.HTM" class="no-ch">3.3.- Programación con URL.</a></li>
      <li><a href="34_CREAR.HTM" class="no-ch">3.4.- Crear y analizar objetos URL.</a></li>
      <li><a href="35_LEER_.HTM" class="no-ch">3.5.- Leer y escribir a través de una URLConnection.</a></li>
      <li><a href="36_TRABA.HTM" class="no-ch">3.6.- Trabajar con el contenido de una URL.</a></li>
   </ul>
   </li>
   <li><a href="4_PROGRA.HTM" class="daddy">4.- Programación de aplicaciones cliente.</a>
   <ul class="other-section">
      <li><a href="41_PROGR.HTM" class="no-ch">4.1.- Programación de un cliente HTTP.</a></li>
      <li><a href="42_BIBLI.HTM" class="no-ch">4.2.- Bibliotecas para programar un cliente FTP.</a></li>
      <li><a href="43_PROGR.HTM" class="no-ch">4.3.- Programación de un cliente FTP.</a></li>
      <li><a href="44_PROGR.HTM" class="no-ch">4.4.- Programación de un cliente Telnet.</a></li>
      <li><a href="45_PROGR.HTM" class="no-ch">4.5.- Programación de un cliente SMTP.</a></li>
   </ul>
   </li>
   <li class="current-page-parent"><a href="5_PROGRA.HTM" class="current-page-parent daddy">5.- Programación de servidores.</a>
   <ul>
      <li><a href="51_PROGR.HTM" class="no-ch">5.1.- Programación de un servidor HTTP.</a></li>
      <li id="active"><a href="52_IMPLE.HTM" class="active no-ch">5.2.- Implementar comunicaciones simultáneas.</a></li>
      <li><a href="53_MONIT.HTM" class="no-ch">5.3.- Monitorización de tiempos de respuesta.</a></li>
      <li><a href="54_EJEMP.HTM" class="no-ch">5.4.- Ejemplo de monitorización del tiempo de transmisión.</a></li>
   </ul>
   </li>
   <li><a href="ANEXO_LI.HTM" class="no-ch">Anexo.- Licencias de recursos.</a></li>
</ul>
</nav>
<div id='topPagination'>
<nav class="pagination noprt">
<a href="51_PROGR.HTM" class="prev"><span><span>&laquo; </span>Anterior</span></a> <span class="sep">| </span><a href="53_MONIT.HTM" class="next"><span>Siguiente<span> &raquo;</span></span></a>
</nav>
</div>
<div id="main-wrapper">
<section id="main">
<header id="nodeDecoration"><h1 id="nodeTitle">5.2.- Implementar comunicaciones simultáneas.</h1></header>
<article class="iDevice_wrapper FreeTextfpdIdevice" id="id77">
<div class="iDevice emphasis0">
<div id="ta77_73" class="block iDevice_content">
<img alt="Foto que muestra en primer plano un portátil y un notebook abierto y una pantalla TFT sobre un escritorio." class="elemento_derecha" height="148" src="../JPG/PSP05-20.JPG" style="width: 200px; height: 148px" title="Zona informática." width="200" />
<p>
Para
proporcinar la funcionalidad a nuestro servidor, de que pueda
atender comunicaciones simultáneas es necesario utilizar hilos o <span lang="en">threads</span>.
</p>
<p>
Un
servidor <span lang="en">HTTP</span> realista tendrá que atender varias peticiones
simultáneamente. Para ello, tenemos que ser capaces de modificar su
código para que pueda utilizar varios hilos de ejecución. Esto se
hace de la siguiente manera:
</p>
<ul class="lista_verificacion">
	<li>
	El
	hilo principal (o sea, el que inicia la aplicación) creará el
<code>socket</code> servidor que permanecerá a la
	espera de que llegue alguna petición. 
	</li>
	<li>
	Cuando
	se reciba una, la aceptará y le asignará un <code>socket</code>
	cliente para enviarle la respuesta. Pero en lugar de
	atenderla él mismo, el hilo principal creará un nuevo hilo para
	que la despache por el <code>socket</code> cliente
	que le asignó. De esta forma, podrá seguir a la espera de nuevas
	peticiones.
	</li>
</ul>
<p>
Esquemáticamente, <strong>el
código del hilo principal tendrá el siguiente aspecto</strong>:
</p>
<div class="codigo elemento_centrado" style="width: 48.9em">
<div class="texto_izquierda">
<pre>
<code>try {</code>
</pre>
<pre>
<code>  socServidor = new ServerSocket(puerto);</code>
</pre>
<pre>
<code>    while (true) {</code>
</pre>
<pre>
<code>      //acepta una petición, y le asigna un socket cliente para la respuesta</code>
</pre>
<pre>
<code>      socketCliente = socServidor.accept();</code>
</pre>
<pre>
<code>      //crea un nuevo hilo para despacharla por el socketCliente que le asignó</code>
</pre>
<pre>
<code>      hilo = new HiloDespachador(socketCliente);</code>
</pre>
<pre>
<code>      hilo.start();</code>
</pre>
<pre>
<code>    }</code>
</pre>
<pre>
<code>  } catch (IOException ex) {</code>
</pre>
<pre>
<code>}</code>
</pre>
</div>
</div>
<br />
<p>
donde la clase <code>HiloDespachador</code> será una extensión de la clase <code>Thread</code> de <span lang="en">Java</span>, cuyo constructor almacenará el <code>socketCliente</code> que recibe en una variable local utilizada luego por su método <code>run()</code> para tramitar la respuesta:
</p>
<div class="codigo elemento_centrado" style="width: 33.5em">
<div class="texto_izquierda">
<pre>
<code>class HiloDespachador extends Thread {</code>
</pre>
<pre>
<code>    private socketCliente;</code>
</pre>
<pre>
<code>    public HiloDespachador(Socket socketCliente) {</code>
</pre>
<pre>
<code>    this.socketCliente = socketCliente;</code>
</pre>
<pre>
<code>  }</code>
</pre>
<pre>
<code>  public void run() {</code>
</pre>
<pre>
<code>    try{</code>
</pre>
<pre>
<code>      //tramita la petición por el socketCliente</code>
</pre>
<pre>
<code>    } catch (IOException ex) {</code>
</pre>
<pre>
<code>    }</code>
</pre>
<pre>
<code>  }</code>
</pre>
<pre>
<code>}</code>
</pre>
</div>
</div>
<br />
<p>
Hecho esto, tendremos todo un Servidor <span lang="en">HTTP</span> capaz de gestionar peticiones concurrentes de manera más eficiente.
</p>

</div>
</div>
</article>
<article class="iDevice_wrapper ParasabermasfpdIdevice em_iDevice" id="id78">
<div class="iDevice emphasis_parasabermasfpd" >
<header class="iDevice_header" style="background-image:url(../PNG/ICON_PAR.PNG)"><h1 class="iDeviceTitle">Para saber más</h1></header>
<div class="iDevice_inner">
<div class="iDevice_content_wrapper">
<div id="ta78_47" class="block iDevice_content">
<p>Aquí tienes un ejemplo mucho más avanzado de un servido <span lang="en">HTTP</span> completo que usa un <span lang="en">pool</span> de hilos para gestionar la concurrencia:</p>
<div class="enlace_centrado"><a href="https://docs.oracle.com/cd/E19146-01/820-7979/geeie/index.html" title="Acceder al ejemplo de un servidor web multihilo."> Servidor <span lang="en">web</span> Mulihilo.</a></div>
<p>En este otro enlace puedes consultar la clase <code>Thread</code> de Java</p>
<div class="enlace_centrado"><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html" title="Acceder a información sobre la clase Thread."> Clase <code>Thread</code> de Java.</a></div>
</div>
</div>
</div>
</div>
</article>
</section>
</div>
<div id='bottomPagination'>
<nav class="pagination noprt">
<a href="51_PROGR.HTM" class="prev"><span><span>&laquo; </span>Anterior</span></a> <span class="sep">| </span><a href="53_MONIT.HTM" class="next"><span>Siguiente<span> &raquo;</span></span></a>
</nav>
</div>
</div>
<script type="text/javascript" src="../JS/_FPD_JS.JS"></script></body>
<!-- Mirrored from ead.murciaeduca.es/pluginfile.php/1432838/mod_resource/content/7/PSP05_Contenidos_web/PSP05_Contenidos_Web/52_implementar_comunicaciones_simultneas.html by HTTrack Website Copier/3.x [XR&CO'2014], Tue, 26 Dec 2023 17:10:44 GMT -->
</html>