<!doctype html>
<html lang="es">

<!-- Mirrored from ead.murciaeduca.es/pluginfile.php/1432783/mod_resource/content/1/PSP02_Contenidos_Web/4_creacin_de_hilos.html by HTTrack Website Copier/3.x [XR&CO'2014], Fri, 06 Oct 2023 22:11:41 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<link rel="stylesheet" type="text/css" href="../CSS/BASE.CSS" />
<link rel="stylesheet" type="text/css" href="../CSS/CONTENT.CSS" />
<link rel="stylesheet" type="text/css" href="../CSS/NAV.CSS" />
<meta http-equiv="content-type" content="text/html;  charset=utf-8" />
<title>4.- Creación de hilos. | PSP_02 </title>
<link rel="shortcut icon" href="../ICO/FAVICON.ICO" type="image/x-icon" />
<meta name="author" content="PSP_02" />
<meta name="generator" content="eXeLearning 2.5 - exelearning.net" />
<!--[if lt IE 9]><script type="text/javascript" src="exe_html5.js"></script><![endif]-->
<script type="text/javascript" src="../JS/EXE_JQUE.JS"></script>
<script type="text/javascript" src="../JS/COMMON_I.JS"></script>
<script type="text/javascript" src="../JS/COMMON.JS"></script>
<meta name="viewport" content="width=device-width, initial-scale=1" /></head>
<body class="exe-web-site" id="exe-node-8"><script type="text/javascript">document.body.className+=" js"</script>
<div id="content">
<p id="skipNav"><a href="#main" class="sr-av">Saltar la navegación</a></p>
<header id="header" ><div id="headerContent">PSP_02</div></header>
<nav id="siteNav">
<ul>
   <li><a href="INDEX.HTM" class="daddy main-node">Programación multihilo.</a></li>
   <li><a href="1_INTROD.HTM" class="no-ch">1.- Introducción.</a></li>
   <li><a href="2_CONCEP.HTM" class="daddy">2.- Conceptos sobre hilos.</a>
   <ul class="other-section">
      <li><a href="21_RECUR.HTM" class="no-ch">2.1.- Recursos compartidos por los hilos.</a></li>
      <li><a href="22_VENTA.HTM" class="no-ch">2.2.- Ventajas y uso de hilos.</a></li>
   </ul>
   </li>
   <li><a href="3_MULTIH.HTM" class="daddy">3.- Multihilo en Java. Librerías y clases.</a>
   <ul class="other-section">
      <li><a href="31_UTILI.HTM" class="no-ch">3.1.- Utilidades de concurrencia del paquete java.lang.</a></li>
      <li><a href="32_UTILI.HTM" class="no-ch">3.2.- Utilidades de concurrencia del paquete java.util.concurrent.</a></li>
   </ul>
   </li>
   <li id="active"><a href="4_CREACI.HTM" class="active daddy">4.- Creación de hilos.</a>
   <ul>
      <li><a href="41_CREAC.HTM" class="no-ch">4.1.- Creación de hilos extendiendo la clase Thread.</a></li>
      <li><a href="42_CREAC.HTM" class="no-ch">4.2.- Creación de hilos mediante la interfaz Runnable.</a></li>
   </ul>
   </li>
   <li><a href="5_ESTADO.HTM" class="daddy">5.- Estados de un hilo.</a>
   <ul class="other-section">
      <li><a href="51_INICI.HTM" class="no-ch">5.1.- Iniciar un hilo.</a></li>
      <li><a href="52_DETEN.HTM" class="no-ch">5.2.- Detener temporalmente un hilo.</a></li>
      <li><a href="53_FINAL.HTM" class="no-ch">5.3.- Finalizar un hilo.</a></li>
      <li><a href="54_EJEMP.HTM" class="no-ch">5.4.- Ejemplo. Dormir un hilo con sleep.</a></li>
   </ul>
   </li>
   <li><a href="6_GESTIN.HTM" class="daddy">6.- Gestión y planificación de hilos.</a>
   <ul class="other-section">
      <li><a href="61_PRIOR.HTM" class="no-ch">6.1.- Prioridad de hilos.</a></li>
      <li><a href="62_HILOS.HTM" class="no-ch">6.2.- Hilos egoístas y programación expulsora.</a></li>
   </ul>
   </li>
   <li><a href="7_SINCRO.HTM" class="daddy">7.- Sincronización y comunicación de hilos.</a>
   <ul class="other-section">
      <li><a href="71_INFOR.HTM" class="no-ch">7.1.- Información compartida entre hilos.</a></li>
      <li><a href="72_MONIT.HTM" class="no-ch">7.2.- Monitores. Métodos synchronized.</a></li>
      <li><a href="73_MONIT.HTM" class="no-ch">7.3.- Monitores. Segmentos de código synchronized.</a></li>
      <li><a href="74_COMUN.HTM" class="no-ch">7.4.- Comunicación entre hilos con métodos de java.lang.Object.</a></li>
      <li><a href="75_EL_PR.HTM" class="no-ch">7.5.- El problema del interbloqueo (deadlock).</a></li>
      <li><a href="76_LA_CL.HTM" class="no-ch">7.6.- La clase Semaphore.</a></li>
      <li><a href="77_LA_CL.HTM" class="no-ch">7.7.- La clase Exchanger.</a></li>
      <li><a href="78_LAS_C.HTM" class="no-ch">7.8.- Las clase CountDownLatch.</a></li>
      <li><a href="79_LA_CL.HTM" class="no-ch">7.9.- La clase CyclicBarrier.</a></li>
   </ul>
   </li>
   <li><a href="8_APLICA.HTM" class="daddy">8.- Aplicaciones multihilo.</a>
   <ul class="other-section">
      <li><a href="81_OTRAS.HTM" class="no-ch">8.1.- Otras utilidades de concurrencia.</a></li>
      <li><a href="82_LA_IN.HTM" class="no-ch">8.2.- La interfaz Executor y los pools de hilos.</a></li>
      <li><a href="83_GESTI.HTM" class="no-ch">8.3.- Gestión de excepciones.</a></li>
      <li><a href="84_DEPUR.HTM" class="no-ch">8.4.- Depuración y documentación.</a></li>
   </ul>
   </li>
   <li><a href="ANEXO_LI.HTM" class="no-ch">Anexo.- Licencias de recursos.</a></li>
</ul>
</nav>
<div id='topPagination'>
<nav class="pagination noprt">
<a href="32_UTILI.HTM" class="prev"><span><span>&laquo; </span>Anterior</span></a> <span class="sep">| </span><a href="41_CREAC.HTM" class="next"><span>Siguiente<span> &raquo;</span></span></a>
</nav>
</div>
<div id="main-wrapper">
<section id="main">
<header id="nodeDecoration"><h1 id="nodeTitle">4.- Creación de hilos.</h1></header>
<article class="iDevice_wrapper CasopracticofpdIdevice em_iDevice" id="id23">
<div class="iDevice emphasis_casopracticofpd" >
<header class="iDevice_header" style="background-image:url(../PNG/ICON_CAS.PNG)"><h1 class="iDeviceTitle">Caso práctico</h1></header>
<div class="iDevice_inner">
<div class="iDevice_content_wrapper">
<div id="ta23_66" class="block iDevice_content">
<p>
<strong>Ana</strong> recuerda que existen diferentes maneras de crear hilos en Java, y que en algunas ocasiones sólo era posible utilizar una de ellas. 
</p>
<p>
Ana le pregunta a <strong>Juan</strong>: —¿Te importa si vemos algunos ejemplos sobre las distintas formas de crear hilos en Java?, he traído mis apuntes de DAM y creo que nos pueden servir. <strong>Juan</strong> le responde —Me parece perfecto,  ¡vamos a ello!
</p>
<img alt="Foto de Ana de pié en diagonal, mirando al frente y con manos cogidas." class="elemento_centrado" height="132" src="../JPG/EIN_PPAA.JPG" style="width: 200px; height: 132px" title="Foto de Ana en diagonal." width="200" />

</div>
</div>
</div>
</div>
</article>
<article class="iDevice_wrapper FreeTextfpdIdevice" id="id24">
<div class="iDevice emphasis0">
<div id="ta24_73" class="block iDevice_content">
<div class="elemento_derecha">
<div class="elemento_centrado"><a href="../JPG/PSP02-15.JPG" title="Ampliar imagen."><img alt="Diagrama con cuatro rectágulos que representa las dos formas de crear o implementar hilos en Java, bien extendiendo la clase Thread o bien implementando la interfaz Runnable. " class="imagen_ampliable" src="../JPG/PSP02-16.JPG" style="width: 200px; height: 124px;" title="Creación de hilos en Java." width="200" height="124" /></a></div>
</div>
<p>En Java, un <strong>hilo</strong> se representa mediante una instancia de la clase <code>java.lang.thread</code>. Este <strong>objeto</strong> <code>thread</code> se emplea para iniciar, detener o cancelar la ejecución del hilo de ejecución.</p>
<p>Los hilos o <code>threads</code> se pueden <strong>implementar o definir de dos formas</strong>:</p>
<ul class="lista_verificacion">
<li>Extendiendo la clase <code>thread</code>.</li>
<li>Mediante la interfaz <code>Runnable</code> .</li>
</ul>
<p>En <strong>ambos casos, se debe proporcionar una definición del método</strong> <code>run()</code>, ya que este método es el que contiene el código que ejecutará el hilo, es decir, su comportamiento.</p>
<p>El procedimiento de construcción de un hilo es independiente de su uso, pues una vez creado se emplea de la misma forma. Entonces, ¿<strong>cuando utilizar uno u otro procedimiento</strong>?</p>
<ul class="lista_verificacion">
<li>Extender la clase <code>thread</code> es el procedimiento más sencillo, pero no siempre es posible. Si la clase ya hereda de alguna otra clase padre, no será posible heredar también de la clase <code>thread</code> (recuerda que Java no permite la herencia múltiple), por lo que habrá que recurrir al otro procedimiento.</li>
<li>Implementar <code>Runnable</code> siempre es posible, es el procedimiento más general y también el más flexible.</li>
</ul>
<p>Por ejemplo, piensa en la programación de applets, cualquiera de ellos tiene que heredar de la clase <code>java.applet.Applet</code>; y en consecuencia ya no puede heredar de <code>thread</code> si se quiere utilizar hilos. En este caso, no queda más remedio que crear los hilos implementando <code>Runnable</code>.</p>
<p>Cuando la Máquina Virtual Java (<acronym title="Máquina Virtual Java.">JVM</acronym>) arranca la ejecución de un programa, ya hay un hilo ejecutándose, denominado hilo principal del programa, controlado por el método <code>main()</code>, que se ejecuta cuando comienza el programa y es el último hilo que termina su ejecución, ya que cuando este hilo finaliza, el programa termina.</p>
<p>El siguiente ejemplo muestra lo que te acabamos de comentar, siempre hay un hilo que ejecuta el método <code>main()</code>, y por defecto, este hilo se llama "<span lang="en">main</span>". Observa que para saber qué hilo se está ejecutando en un momento dado, el hilo en curso, utilizamos el método <code>currentThread()</code> y que obtenemos su nombre invocando al método <code>getName()</code>, ambos de la clase <code>thread</code>.</p>
<div class="enlace_centrado"><a class="paquete" href="../ZIP/PSP02_CO.ZIP" title="Descargar archivo con código para mostrar el hilo principal de un programa. [zip - 0.01 MB]"> Código para mostrar el hilo principal de un programa.</a> <span class="tamano"> (0.01 MB) </span></div>
</div>
</div>
</article>
<article class="iDevice_wrapper VerdaderofalsofpdIdevice em_iDevice" id="id25">
<div class="iDevice emphasis_autoevaluacionfpd" >
<header class="iDevice_header" style="background-image:url(../GIF/ICON_AUT.GIF)"><h1 class="iDeviceTitle">Autoevaluación</h1></header>
<div class="iDevice_inner">
<div class="iDevice_content_wrapper">
<div id="ta25_54" class="block iDevice_content">
<strong>Señala si la afirmación siguiente es verdadera o falsa:</strong>

</div>
<section class="question">
<form name="true-false-form-0b25" action="#" class="activity-form">
<h1 class="js-sr-av">Pregunta 1</h1>
<div id="taquestion0b25" class="block iDevice_content">
Los hilos en Java siempre se implementan mediante una clase que hereda de la clase  <code>thread </code>.

</div>
<p class="iDevice_answer js-required">
<label for="true0b25"><input type="radio" name="option0b25" id="true0b25" class="exe-radio-option exe-radio-option-0-2-0b25-truefalse" /> Verdadero</label> 
<label for="false0b25"><input type="radio" name="option0b25" id="false0b25" class="exe-radio-option exe-radio-option-1-2-0b25-truefalse" /> Falso</label>
</p>
</form>
<section id="s0b25" class="feedback js-feedback js-hidden">
<h1 class="js-sr-av">Retroalimentación</h1>
<p><strong id="s0b25-result" class="wrong">Falso</strong></p>
La afirmación es falsa porque se pueden definir  también hilos mediante la interfaz Runnable, de hecho se deberán crear por  este procedimiento  si la clase ya hereda de alguna otra.

</section>
</section>
</div>
</div>
</div>
</article>
</section>
</div>
<div id='bottomPagination'>
<nav class="pagination noprt">
<a href="32_UTILI.HTM" class="prev"><span><span>&laquo; </span>Anterior</span></a> <span class="sep">| </span><a href="41_CREAC.HTM" class="next"><span>Siguiente<span> &raquo;</span></span></a>
</nav>
</div>
</div>
<script type="text/javascript" src="../JS/_FPD_JS.JS"></script></body>
<!-- Mirrored from ead.murciaeduca.es/pluginfile.php/1432783/mod_resource/content/1/PSP02_Contenidos_Web/4_creacin_de_hilos.html by HTTrack Website Copier/3.x [XR&CO'2014], Fri, 06 Oct 2023 22:11:42 GMT -->
</html>