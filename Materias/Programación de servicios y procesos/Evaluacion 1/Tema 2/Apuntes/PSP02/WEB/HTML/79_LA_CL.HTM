<!doctype html>
<html lang="es">

<!-- Mirrored from ead.murciaeduca.es/pluginfile.php/1432783/mod_resource/content/1/PSP02_Contenidos_Web/79_la_clase_cyclicbarrier.html by HTTrack Website Copier/3.x [XR&CO'2014], Fri, 06 Oct 2023 22:12:03 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<link rel="stylesheet" type="text/css" href="../CSS/BASE.CSS" />
<link rel="stylesheet" type="text/css" href="../CSS/CONTENT.CSS" />
<link rel="stylesheet" type="text/css" href="../CSS/NAV.CSS" />
<meta http-equiv="content-type" content="text/html;  charset=utf-8" />
<title>7.9.- La clase CyclicBarrier. | PSP_02 </title>
<link rel="shortcut icon" href="../ICO/FAVICON.ICO" type="image/x-icon" />
<meta name="author" content="PSP_02" />
<meta name="generator" content="eXeLearning 2.5 - exelearning.net" />
<!--[if lt IE 9]><script type="text/javascript" src="exe_html5.js"></script><![endif]-->
<script type="text/javascript" src="../JS/EXE_JQUE.JS"></script>
<script type="text/javascript" src="../JS/COMMON_I.JS"></script>
<script type="text/javascript" src="../JS/COMMON.JS"></script>
<meta name="viewport" content="width=device-width, initial-scale=1" /></head>
<body class="exe-web-site" id="exe-node-28"><script type="text/javascript">document.body.className+=" js"</script>
<div id="content">
<p id="skipNav"><a href="#main" class="sr-av">Saltar la navegación</a></p>
<header id="header" ><div id="headerContent">PSP_02</div></header>
<nav id="siteNav">
<ul>
   <li><a href="INDEX.HTM" class="daddy main-node">Programación multihilo.</a></li>
   <li><a href="1_INTROD.HTM" class="no-ch">1.- Introducción.</a></li>
   <li><a href="2_CONCEP.HTM" class="daddy">2.- Conceptos sobre hilos.</a>
   <ul class="other-section">
      <li><a href="21_RECUR.HTM" class="no-ch">2.1.- Recursos compartidos por los hilos.</a></li>
      <li><a href="22_VENTA.HTM" class="no-ch">2.2.- Ventajas y uso de hilos.</a></li>
   </ul>
   </li>
   <li><a href="3_MULTIH.HTM" class="daddy">3.- Multihilo en Java. Librerías y clases.</a>
   <ul class="other-section">
      <li><a href="31_UTILI.HTM" class="no-ch">3.1.- Utilidades de concurrencia del paquete java.lang.</a></li>
      <li><a href="32_UTILI.HTM" class="no-ch">3.2.- Utilidades de concurrencia del paquete java.util.concurrent.</a></li>
   </ul>
   </li>
   <li><a href="4_CREACI.HTM" class="daddy">4.- Creación de hilos.</a>
   <ul class="other-section">
      <li><a href="41_CREAC.HTM" class="no-ch">4.1.- Creación de hilos extendiendo la clase Thread.</a></li>
      <li><a href="42_CREAC.HTM" class="no-ch">4.2.- Creación de hilos mediante la interfaz Runnable.</a></li>
   </ul>
   </li>
   <li><a href="5_ESTADO.HTM" class="daddy">5.- Estados de un hilo.</a>
   <ul class="other-section">
      <li><a href="51_INICI.HTM" class="no-ch">5.1.- Iniciar un hilo.</a></li>
      <li><a href="52_DETEN.HTM" class="no-ch">5.2.- Detener temporalmente un hilo.</a></li>
      <li><a href="53_FINAL.HTM" class="no-ch">5.3.- Finalizar un hilo.</a></li>
      <li><a href="54_EJEMP.HTM" class="no-ch">5.4.- Ejemplo. Dormir un hilo con sleep.</a></li>
   </ul>
   </li>
   <li><a href="6_GESTIN.HTM" class="daddy">6.- Gestión y planificación de hilos.</a>
   <ul class="other-section">
      <li><a href="61_PRIOR.HTM" class="no-ch">6.1.- Prioridad de hilos.</a></li>
      <li><a href="62_HILOS.HTM" class="no-ch">6.2.- Hilos egoístas y programación expulsora.</a></li>
   </ul>
   </li>
   <li class="current-page-parent"><a href="7_SINCRO.HTM" class="current-page-parent daddy">7.- Sincronización y comunicación de hilos.</a>
   <ul>
      <li><a href="71_INFOR.HTM" class="no-ch">7.1.- Información compartida entre hilos.</a></li>
      <li><a href="72_MONIT.HTM" class="no-ch">7.2.- Monitores. Métodos synchronized.</a></li>
      <li><a href="73_MONIT.HTM" class="no-ch">7.3.- Monitores. Segmentos de código synchronized.</a></li>
      <li><a href="74_COMUN.HTM" class="no-ch">7.4.- Comunicación entre hilos con métodos de java.lang.Object.</a></li>
      <li><a href="75_EL_PR.HTM" class="no-ch">7.5.- El problema del interbloqueo (deadlock).</a></li>
      <li><a href="76_LA_CL.HTM" class="no-ch">7.6.- La clase Semaphore.</a></li>
      <li><a href="77_LA_CL.HTM" class="no-ch">7.7.- La clase Exchanger.</a></li>
      <li><a href="78_LAS_C.HTM" class="no-ch">7.8.- Las clase CountDownLatch.</a></li>
      <li id="active"><a href="79_LA_CL.HTM" class="active no-ch">7.9.- La clase CyclicBarrier.</a></li>
   </ul>
   </li>
   <li><a href="8_APLICA.HTM" class="daddy">8.- Aplicaciones multihilo.</a>
   <ul class="other-section">
      <li><a href="81_OTRAS.HTM" class="no-ch">8.1.- Otras utilidades de concurrencia.</a></li>
      <li><a href="82_LA_IN.HTM" class="no-ch">8.2.- La interfaz Executor y los pools de hilos.</a></li>
      <li><a href="83_GESTI.HTM" class="no-ch">8.3.- Gestión de excepciones.</a></li>
      <li><a href="84_DEPUR.HTM" class="no-ch">8.4.- Depuración y documentación.</a></li>
   </ul>
   </li>
   <li><a href="ANEXO_LI.HTM" class="no-ch">Anexo.- Licencias de recursos.</a></li>
</ul>
</nav>
<div id='topPagination'>
<nav class="pagination noprt">
<a href="78_LAS_C.HTM" class="prev"><span><span>&laquo; </span>Anterior</span></a> <span class="sep">| </span><a href="8_APLICA.HTM" class="next"><span>Siguiente<span> &raquo;</span></span></a>
</nav>
</div>
<div id="main-wrapper">
<section id="main">
<header id="nodeDecoration"><h1 id="nodeTitle">7.9.- La clase CyclicBarrier.</h1></header>
<article class="iDevice_wrapper FreeTextfpdIdevice" id="id82">
<div class="iDevice emphasis0">
<div id="ta82_73" class="block iDevice_content">
<img alt="Vista parcial de una noria a plena luz el día." class="elemento_derecha" height="160" src="../JPG/PSP02-55.JPG" style="width: 184px; height: 160px" title="Noria." width="184" />
<p>
La clase <code>CyclicBarrier</code> del paquete <code>java.util.concurrent</code> es una utilidad de sincronización que permite que uno o más <code>threads</code> se esperen hasta que todos ellos finalicen su trabajo.
</p>
<p>
El <strong>funcionamiento esquemático</strong> de <code>CyclicBarrier</code> o &quot;barrera cíclica&quot; es el siguiente:
</p>
<ul class="lista_verificacion">
	<li>Implementa un punto de espera que llamaremos &quot;barrera&quot;, donde cierto número de hilos esperan a que todos ellos finalicen  su trabajo.</li>
	<li>Finalizado el trabajo de estos hilos, se dispara la ejecución de una determinada acción o bien el hilo interrumpido continúa su trabajo.</li>
	<li>La barrera se llama cíclica, porque se puede <strong>volver a utilizar</strong> después de que los hilos en espera han sido liberados  tras finalizar todos su trabajo, y también <strong>se puede reiniciar</strong>.</li>
</ul>
<p>
Los <strong>aspectos más importantes  al usar la clase</strong> <code>CyclicBarrier</code> son los siguientes: 
</p>
<ul class="lista_verificacion">
	<li>Indicar al constructor <code>CyclicBarrier(int hilosAcceden)</code> el total de hilos que van a usar la barrera mediante el parámetro <code>hilosAcceden</code>. Este número sirve para disparar la barrera.</li>
	<li>La barrera se dispara cuando llega el último hilo.</li>
	<li>Cuando se dispara la barrera, dependiendo del constructor, <code>CyclicBarrier(int hilosAcceden</code>) o<code> CyclicBarrier(int hilosAcceden, Runnable acciónBarrera)</code> se lanzará o no una acción, y entonces se liberan los hilos de la barrera.  Esa acción puede ser realizada mediante cualquier objeto que implemente <code>Runnable</code>. </li>
	<li>El método principal de esta clase es <code>await()</code> que se utiliza para indicar que el hilo en curso ha concluido su trabajo y queda a la espera de que lo hagan los demás.</li>
</ul>
<p>
<strong>Otros métodos</strong> de esta clase que puedes utilizar son:
</p>
<ul class="lista_verificacion">
	<li>El método <code>await(long tiempoespera, TimeUnit unit)</code> funciona como el anterior, pero en este caso el hilo espera en la barrera hasta que los demás finalicen su trabajo o se supere el <code>tiempoespera</code>. </li>
	<li>El método<code> reset()</code> permite reiniciar la barrera a su estado inicial.</li>
	<li>El método<code> getNumber Waiting()</code> devuelve el número de hilos que están en espera en la barrera.</li>
	<li>El método <code>getParties() </code>devuelve el número de hilos requeridos para esa barrera</li>
</ul>
<p>
En el siguiente enlace puedes ver un ejemplo parecido al anterior, pero ahora resuelto con <code>CyclicBarrier</code>.  Cada fila de la matriz ahora representa los valores recaudados por un cobrador. Cada fila es sumada por un hilo. Cuando 5 de estos hilos finalizan su trabajo, se dispara un objeto que implementa <code>Runnable</code> para obtener la suma recaudada hasta el momento. Como la matriz del ejemplo tiene 10 filas, la suma de sus elementos  se hará mediante una barrera  de 5 hilos y que se utilizará por tanto de forma cíclica dos veces.
</p>
<div class="enlace_centrado">
<a class="paquete" href="../ZIP/PSP02-19.ZIP" title="Descargar proyecto Java ejemplo de uso de CyclicBarrier.  [zip - 0.01 MB]">Código del proyecto ejemplo de uso de CyclicBarrier</a>. <span class="tamano"> (0.01 MB) </span> 
</div>

</div>
</div>
</article>
<article class="iDevice_wrapper VerdaderofalsofpdIdevice em_iDevice" id="id84">
<div class="iDevice emphasis_autoevaluacionfpd" >
<header class="iDevice_header" style="background-image:url(../GIF/ICON_AUT.GIF)"><h1 class="iDeviceTitle">Autoevaluación</h1></header>
<div class="iDevice_inner">
<div class="iDevice_content_wrapper">
<div id="ta84_54" class="block iDevice_content">
<strong>Señala si la siguiente afirmación es verdadera o falsa.</strong>

</div>
<section class="question">
<form name="true-false-form-0b84" action="#" class="activity-form">
<h1 class="js-sr-av">Pregunta 1</h1>
<div id="taquestion0b84" class="block iDevice_content">
El método <code>await() </code>de la clase <code>CyclicBarrier</code>  permite indicar que el hilo en curso ha concluido su trabajo y queda a la espera de que lo hagan los demás.

</div>
<p class="iDevice_answer js-required">
<label for="true0b84"><input type="radio" name="option0b84" id="true0b84" class="exe-radio-option exe-radio-option-0-2-0b84-truefalse" /> Verdadero</label> 
<label for="false0b84"><input type="radio" name="option0b84" id="false0b84" class="exe-radio-option exe-radio-option-1-2-0b84-truefalse" /> Falso</label>
</p>
</form>
<section id="s0b84" class="feedback js-feedback js-hidden">
<h1 class="js-sr-av">Retroalimentación</h1>
<p><strong id="s0b84-result" class="right">Verdadero</strong></p>
Es verdadero, es el método pone en espera al hilo en curso desde donde se invoca.

</section>
</section>
</div>
</div>
</div>
</article>
<article class="iDevice_wrapper ParasabermasfpdIdevice em_iDevice" id="id85">
<div class="iDevice emphasis_parasabermasfpd" >
<header class="iDevice_header" style="background-image:url(../PNG/ICON_PAR.PNG)"><h1 class="iDeviceTitle">Para saber más</h1></header>
<div class="iDevice_inner">
<div class="iDevice_content_wrapper">
<div id="ta85_47" class="block iDevice_content">
<p>En el siguiente enlace puedes consultar otros métodos de la clase <code>CyclicBarrier</code>.</p>
<p class="enlace_centrado"><a href="https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/util/concurrent/CyclicBarrier.html" title="Acceder a la web oficial con información sobre a clase CyclicBarrier."> Clase <code>CyclicBarrier</code> en la web oficial.</a></p>
</div>
</div>
</div>
</div>
</article>
</section>
</div>
<div id='bottomPagination'>
<nav class="pagination noprt">
<a href="78_LAS_C.HTM" class="prev"><span><span>&laquo; </span>Anterior</span></a> <span class="sep">| </span><a href="8_APLICA.HTM" class="next"><span>Siguiente<span> &raquo;</span></span></a>
</nav>
</div>
</div>
<script type="text/javascript" src="../JS/_FPD_JS.JS"></script></body>
<!-- Mirrored from ead.murciaeduca.es/pluginfile.php/1432783/mod_resource/content/1/PSP02_Contenidos_Web/79_la_clase_cyclicbarrier.html by HTTrack Website Copier/3.x [XR&CO'2014], Fri, 06 Oct 2023 22:12:03 GMT -->
</html>